<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--MEMO-->
<!-- <m> initwith </m> : references a message -->
<!-- <o> loadbang </o> : references an object -->
<!-- <i> mvc.overview.maxpat </i> : references a patcher -->
<!-- <at>default</at> : references an attribute -->

<c74object name="mvc.mc.bands~" module="aim" kind="patcher" category="library">

	<digest>
		Split the frequencies into N even bands.
	</digest>
	
	<description>
		<o>mvc.mc.bands~</o> provides a cheap way to split a single channel input signal into N resonant-filtered signals, combined as a multichannel output. Note that it uses an IIR resonant filter and as such does not provide a linear phase response.
	</description>
	
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Vincent Goudard</metadata>
		<metadata name="tag">MVC</metadata>
		<metadata name="tag">mapping</metadata>
		<metadata name="aim-type">component</metadata>
	</metadatalist>
	
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="signal">
			<digest>audio input</digest>
		</inlet>
		<inlet id="1" type="message">
			<digest>lowest frequency</digest>
		</inlet>
		<inlet id="2" type="message">
			<digest>highest frequency</digest>
		</inlet>
		<inlet id="3" type="message">
			<digest>band count (1 to 24)</digest>
		</inlet>
		<inlet id="4" type="message">
			<digest>% bandwidth</digest>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="signal">
			<digest>filtered band (multichannel)</digest>
		</outlet>
	</outletlist>
	
	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>
	
	<!--MESSAGES-->
	<methodlist>
	</methodlist>
	
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="mvc.mb.limiter~"/>
		<seealso name="mvc.mc.crossfilterbank~"/>
	</seealsolist>
	
</c74object>